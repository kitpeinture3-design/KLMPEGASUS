{
  "name": "klm-pegasus",
  "version": "1.0.0",
  "description": "Plateforme E-commerce IA RÃ©volutionnaire - Plus puissante que Squarespace et Shopify",
  "author": "Manus AI",
  "license": "MIT",
  "private": true,
  "keywords": [
    "e-commerce",
    "ai",
    "artificial-intelligence",
    "website-builder",
    "react",
    "nodejs",
    "python",
    "fastapi",
    "stripe",
    "openai"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/votre-username/klm-pegasus.git"
  },
  "bugs": {
    "url": "https://github.com/votre-username/klm-pegasus/issues"
  },
  "homepage": "https://klmpegasus.com",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0",
    "python": ">=3.11.0"
  },
  "workspaces": [
    "frontend",
    "backend"
  ],
  "scripts": {
    "install:all": "npm install && npm run install:frontend && npm run install:backend && npm run install:ai",
    "install:frontend": "cd frontend && npm install",
    "install:backend": "cd backend && npm install",
    "install:ai": "cd ai-service && pip install -r requirements.txt",
    
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\" \"npm run dev:ai\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "dev:ai": "cd ai-service && python -m uvicorn main:app --reload --host 0.0.0.0 --port 8001",
    
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    
    "start": "docker-compose up -d",
    "stop": "docker-compose down",
    "restart": "npm run stop && npm run start",
    "logs": "docker-compose logs -f",
    
    "test": "npm run test:frontend && npm run test:backend && npm run test:ai",
    "test:frontend": "cd frontend && npm test -- --watchAll=false",
    "test:backend": "cd backend && npm test",
    "test:ai": "cd ai-service && pytest",
    
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "lint:fix": "npm run lint:frontend -- --fix && npm run lint:backend -- --fix",
    
    "db:migrate": "cd backend && npx prisma migrate dev",
    "db:generate": "cd backend && npx prisma generate",
    "db:seed": "cd backend && npx prisma db seed",
    "db:studio": "cd backend && npx prisma studio",
    "db:reset": "cd backend && npx prisma migrate reset",
    
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v && docker system prune -f",
    
    "deploy:staging": "npm run build && docker-compose -f docker-compose.staging.yml up -d",
    "deploy:production": "npm run build && docker-compose -f docker-compose.prod.yml up -d",
    
    "health": "npm run health:backend && npm run health:ai",
    "health:backend": "curl -f http://localhost:8000/health || echo 'Backend not responding'",
    "health:ai": "curl -f http://localhost:8001/health || echo 'AI Service not responding'",
    
    "setup": "npm run install:all && npm run db:migrate && npm run db:seed",
    "clean": "npm run clean:frontend && npm run clean:backend && npm run clean:ai",
    "clean:frontend": "cd frontend && rm -rf node_modules dist",
    "clean:backend": "cd backend && rm -rf node_modules dist",
    "clean:ai": "cd ai-service && rm -rf __pycache__ .pytest_cache",
    
    "format": "npm run format:frontend && npm run format:backend",
    "format:frontend": "cd frontend && npx prettier --write src/",
    "format:backend": "cd backend && npx prettier --write src/",
    
    "check": "npm run check:requirements && npm run health",
    "check:requirements": "node scripts/check-requirements.js"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3"
  },
  "config": {
    "ports": {
      "frontend": 3000,
      "backend": 8000,
      "ai-service": 8001,
      "postgres": 5432,
      "redis": 6379,
      "mongodb": 27017
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run lint",
      "pre-push": "npm run test"
    }
  }
}

